---
import { SITE } from 'src/config'
import Button from '@components/Button.astro'
import Heading from '@components/Heading.astro'
import Layout from '@layouts/Layout.astro'
import RadioMenu from '@components/RadioMenu.astro'
import TextField from '@components/TextField.astro'
---

<Layout title={SITE.title + ': Macros'}>
  <Heading level="h1">Macros</Heading>
  <div class="grid gap-8 grid-cols-2">
    <form id="macros" class="flex flex-col gap-4">
      <TextField label="height (inches)" name="height" value="71" />
      <TextField label="weight (lbs)" name="weight" value="195" />
      <TextField label="age" name="age" value="43" />
      <RadioMenu
        name="sex"
        label="sex"
        value="male"
        options={[
          { name: 'male', value: 'male' },
          { name: 'female', value: 'female' },
        ]}
      />

      <RadioMenu
        name="phase"
        label="activity level"
        value="maintain"
        options={[
          { name: 'maintain', value: 'maintain' },
          { name: 'bulk', value: 'bulk' },
          { name: 'cut', value: 'cut' },
        ]}
      />

      <RadioMenu
        name="activityLevel"
        label="Activity Level"
        value="1.375"
        options={[
          { name: 'sedentary', value: '1.2' },
          { name: 'light', value: '1.375' },
          { name: 'moderate', value: '1.55' },
          { name: 'heavy', value: '1.725' },
          { name: 'extreme', value: '1.9' },
        ]}
      >
        <div>
          Sedentary is nadda.
          <br />
          Light is 1-3 workouts a week.
          <br />
          Moderate 4-5 workouts a week.
          <br />
          Heavy 6-7 workouts a week. <br />
          Extreme 2x a day many days a week.
        </div>
      </RadioMenu>
      <Button inverse type="submit" class="mt-4">Calculate</Button>
    </form>

    <div id="results"></div>
  </div>
</Layout>

<script>
  import { atom } from 'nanostores'
  import { getRestingMetabolicRate, getMacros } from './macros.utils'
  import { sentencecase } from 'stringcase'

  const activityLevels = [
    { name: 'sedentary', value: '1.2' },
    { name: 'light', value: '1.375' },
    { name: 'moderate', value: '1.55' },
    { name: 'heavy', value: '1.725' },
    { name: 'extreme', value: '1.9' },
  ]

  const state = atom({})
  const inputs = document.querySelectorAll('#macros input')
  const form = document.getElementById('macros')
  const results = document.getElementById('results')

  /*
    inputs.forEach((input) => {
      input.addEventListener('change', (e) => {
        state.set({ ...state.get(), [e.target.name]: e.target.value })
      })
    })
  */

  form.onsubmit = (e) => {
    e.preventDefault()

    inputs.forEach((input) => {
      if (input.type === 'radio' || input.type === 'checkbox') {
        if (input.checked) {
          state.set({ ...state.get(), [input.name]: input.value })
        }
      } else {
        state.set({ ...state.get(), [input.name]: input.value })
      }
    })

    const formState = state.get()
    // @ts-ignore
    const { sex, height, weight, age, activityLevel, phase } = formState
    const rmr = getRestingMetabolicRate(sex === 'male', height, weight, age)
    const macros = getMacros(weight, rmr, phase, activityLevel)
    const htmlString = Object.entries(macros)
      .map(
        ([key, value]) =>
          `<div class="flex gap-4"><dt>${sentencecase(
            key,
          )}:</dt><dd>${value}</dd></div>`,
      )
      .join('')

    const levelName = activityLevels.find(
      (level) => level.value === activityLevel,
    )

    results.innerHTML = `
    <h3>Goal: ${phase}<br />Level: ${levelName.name}</h3>
    <dl>${htmlString}</dl>`
  }
</script>
